openapi: 3.0.3
info:
  title: AvícolaTrack API
  version: 1.0.0
  description: API OpenAPI schema for AvícolaTrack (Sprint 1)
paths:
  /api/admin-users/:
    get:
      operationId: api_admin_users_list
      parameters:
      - name: page
        required: false
        in: query
        description: Un número de página dentro del conjunto de resultados paginado.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminUserList'
          description: ''
    post:
      operationId: api_admin_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUser'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
  /api/admin-users/{id}/:
    get:
      operationId: api_admin_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este usuario.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    put:
      operationId: api_admin_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este usuario.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminUser'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    patch:
      operationId: api_admin_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este usuario.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUser'
          description: ''
    delete:
      operationId: api_admin_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este usuario.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/login/:
    post:
      operationId: api_auth_login_create
      description: Extiende TokenObtainPairView para añadir info del usuario y logging.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/password-reset/:
    post:
      operationId: api_auth_password_reset_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequest'
          description: ''
  /api/auth/password-reset-confirm/:
    post:
      operationId: api_auth_password_reset_confirm_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
  /api/auth/refresh/:
    post:
      operationId: api_auth_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/register/:
    post:
      operationId: api_auth_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
  /api/daily-weights/:
    get:
      operationId: api_daily_weights_list
      parameters:
      - name: page
        required: false
        in: query
        description: Un número de página dentro del conjunto de resultados paginado.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDailyWeightList'
          description: ''
    post:
      operationId: api_daily_weights_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DailyWeight'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DailyWeight'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DailyWeight'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyWeight'
          description: ''
  /api/daily-weights/{id}/:
    get:
      operationId: api_daily_weights_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este daily weight record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyWeight'
          description: ''
    put:
      operationId: api_daily_weights_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este daily weight record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DailyWeight'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DailyWeight'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DailyWeight'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyWeight'
          description: ''
    patch:
      operationId: api_daily_weights_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este daily weight record.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDailyWeight'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDailyWeight'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDailyWeight'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyWeight'
          description: ''
    delete:
      operationId: api_daily_weights_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este daily weight record.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/daily-weights/bulk-sync/:
    post:
      operationId: api_daily_weights_bulk_sync_create
      description: Sincroniza en bloque registros de peso promedio desde dispositivos
        móviles. Devuelve un resumen con detalles por client_id indicando si se creó,
        se promedió o se reportó conflicto.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkSyncRequest'
            examples:
              EjemploÉxitoParcial:
                value:
                  total: 2
                  successful: 1
                  conflicts: 1
                  errors: 0
                  details:
                  - client_id: c1
                    server_id: 123
                    status: created
                    message: ''
                  - client_id: c2
                    server_id: null
                    status: conflict
                    message: manual_conflict_required
                summary: Ejemplo éxito parcial
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkSyncRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkSyncRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkSyncResult'
              examples:
                EjemploÉxitoParcial:
                  value:
                    total: 2
                    successful: 1
                    conflicts: 1
                    errors: 0
                    details:
                    - client_id: c1
                      server_id: 123
                      status: created
                      message: ''
                    - client_id: c2
                      server_id: null
                      status: conflict
                      message: manual_conflict_required
                  summary: Ejemplo éxito parcial
          description: ''
  /api/dashboard/:
    get:
      operationId: api_dashboard_retrieve
      description: Vista resumida del estado de los galpones accesibles al usuario.
        Incluye resumen de capacidad/ocupación, listado de galpones con indicadores
        y la hora del último cálculo.
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardResponse'
              examples:
                EjemploDashboard:
                  value:
                    summary:
                      total_capacity: 1000
                      total_occupancy: 560
                    sheds:
                    - id: 1
                      name: Galpón A
                      farm_name: Granja Central
                      galponero: Juan Perez
                      occupancy:
                        current: 200
                        capacity: 300
                        percentage: 66.67
                      flocks:
                        active_count: 2
                        avg_age: 15.5
                        total_birds: 200
                      last_activity:
                        weight_date: '2025-09-28'
                      status_indicator:
                        color: green
                        message: Al día
                    alerts_count: 3
                    last_updated: '2025-09-28T12:00:00Z'
                  summary: Ejemplo dashboard
          description: ''
  /api/farms/:
    get:
      operationId: api_farms_list
      parameters:
      - name: page
        required: false
        in: query
        description: Un número de página dentro del conjunto de resultados paginado.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFarmList'
          description: ''
    post:
      operationId: api_farms_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Farm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Farm'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
  /api/farms/{id}/:
    get:
      operationId: api_farms_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este farm.
        required: true
      - in: query
        name: pk
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
    put:
      operationId: api_farms_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este farm.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Farm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Farm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Farm'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
    patch:
      operationId: api_farms_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este farm.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFarm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFarm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFarm'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Farm'
          description: ''
    delete:
      operationId: api_farms_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este farm.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/flocks/:
    get:
      operationId: api_flocks_list
      parameters:
      - name: page
        required: false
        in: query
        description: Un número de página dentro del conjunto de resultados paginado.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFlockList'
          description: ''
    post:
      operationId: api_flocks_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Flock'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flock'
          description: ''
  /api/flocks/{id}/:
    get:
      operationId: api_flocks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este flock.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flock'
          description: ''
    put:
      operationId: api_flocks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este flock.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Flock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Flock'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flock'
          description: ''
    patch:
      operationId: api_flocks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este flock.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFlock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFlock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFlock'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flock'
          description: ''
    delete:
      operationId: api_flocks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: Un valor de entero único que identifique este flock.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AdminUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Nombre de usuario
          description: 'Requerido. 150 carácteres como máximo. Únicamente letras,
            dígitos y @/./+/-/_ '
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Dirección de correo electrónico
          maxLength: 254
        password:
          type: string
          writeOnly: true
          title: Contraseña
          maxLength: 128
        password_confirm:
          type: string
          writeOnly: true
        identification:
          type: string
          maxLength: 20
        phone:
          type: string
          maxLength: 15
        role:
          type: integer
      required:
      - id
      - identification
      - password
      - username
    BulkSyncDetail:
      type: object
      properties:
        client_id:
          type: string
        server_id:
          type: integer
          nullable: true
        status:
          $ref: '#/components/schemas/BulkSyncDetailStatusEnum'
        message:
          type: string
      required:
      - status
    BulkSyncDetailStatusEnum:
      enum:
      - created
      - averaged
      - conflict
      type: string
      description: |-
        * `created` - created
        * `averaged` - averaged
        * `conflict` - conflict
    BulkSyncRequest:
      type: object
      properties:
        weight_records:
          type: array
          items:
            $ref: '#/components/schemas/BulkWeightRecord'
      required:
      - weight_records
    BulkSyncResult:
      type: object
      properties:
        total:
          type: integer
        successful:
          type: integer
        conflicts:
          type: integer
        errors:
          type: integer
        details:
          type: array
          items:
            $ref: '#/components/schemas/BulkSyncDetail'
      required:
      - conflicts
      - details
      - errors
      - successful
      - total
    BulkWeightRecord:
      type: object
      properties:
        flock_id:
          type: integer
        date:
          type: string
          format: date
        average_weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        sample_size:
          type: integer
          default: 10
        client_id:
          type: string
      required:
      - average_weight
      - date
      - flock_id
    DailyWeight:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        flock:
          type: integer
        date:
          type: string
          format: date
        average_weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        sample_size:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        recorded_by:
          type: integer
        expected_weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        deviation_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        client_id:
          type: string
          nullable: true
          maxLength: 50
      required:
      - average_weight
      - date
      - deviation_percentage
      - expected_weight
      - flock
      - id
      - recorded_by
    DashboardResponse:
      type: object
      properties:
        summary:
          type: object
          additionalProperties:
            type: integer
        sheds:
          type: array
          items:
            $ref: '#/components/schemas/ShedDetail'
        alerts_count:
          type: integer
        last_updated:
          type: string
          format: date-time
      required:
      - alerts_count
      - last_updated
      - sheds
      - summary
    Farm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        location:
          type: string
        farm_manager:
          type: integer
        total_capacity:
          type: integer
          readOnly: true
        active_sheds:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - active_sheds
      - created_at
      - farm_manager
      - id
      - location
      - name
      - total_capacity
    Flock:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        arrival_date:
          type: string
          format: date
        initial_quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        current_quantity:
          type: integer
          readOnly: true
        initial_weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        breed:
          type: string
          maxLength: 50
        gender:
          $ref: '#/components/schemas/GenderEnum'
        supplier:
          type: string
          maxLength: 100
        shed:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/FlockStatusEnum'
          readOnly: true
        current_age_days:
          type: integer
          description: Return the current age in days for documentation/schema purposes.
          readOnly: true
        survival_rate:
          type: number
          description: Return survival rate as a percentage (0-100).
          readOnly: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
      required:
      - arrival_date
      - breed
      - created_by
      - current_age_days
      - current_quantity
      - gender
      - id
      - initial_quantity
      - initial_weight
      - shed
      - status
      - supplier
      - survival_rate
    FlockStatusEnum:
      enum:
      - ACTIVE
      - SOLD
      - FINISHED
      - TRANSFERRED
      type: string
      description: |-
        * `ACTIVE` - Activo
        * `SOLD` - Vendido
        * `FINISHED` - Terminado
        * `TRANSFERRED` - Transferido
    GenderEnum:
      enum:
      - M
      - F
      - X
      type: string
      description: |-
        * `M` - Macho
        * `F` - Hembra
        * `X` - Mixto
    PaginatedAdminUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminUser'
    PaginatedDailyWeightList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/DailyWeight'
    PaginatedFarmList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Farm'
    PaginatedFlockList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Flock'
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
          writeOnly: true
        new_password_confirm:
          type: string
          writeOnly: true
      required:
      - new_password
      - new_password_confirm
      - token
      - uid
    PasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PatchedAdminUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          title: Nombre de usuario
          description: 'Requerido. 150 carácteres como máximo. Únicamente letras,
            dígitos y @/./+/-/_ '
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Dirección de correo electrónico
          maxLength: 254
        password:
          type: string
          writeOnly: true
          title: Contraseña
          maxLength: 128
        password_confirm:
          type: string
          writeOnly: true
        identification:
          type: string
          maxLength: 20
        phone:
          type: string
          maxLength: 15
        role:
          type: integer
    PatchedDailyWeight:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        flock:
          type: integer
        date:
          type: string
          format: date
        average_weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        sample_size:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        recorded_by:
          type: integer
        expected_weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        deviation_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        client_id:
          type: string
          nullable: true
          maxLength: 50
    PatchedFarm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        location:
          type: string
        farm_manager:
          type: integer
        total_capacity:
          type: integer
          readOnly: true
        active_sheds:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedFlock:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        arrival_date:
          type: string
          format: date
        initial_quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
        current_quantity:
          type: integer
          readOnly: true
        initial_weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        breed:
          type: string
          maxLength: 50
        gender:
          $ref: '#/components/schemas/GenderEnum'
        supplier:
          type: string
          maxLength: 100
        shed:
          type: integer
        status:
          allOf:
          - $ref: '#/components/schemas/FlockStatusEnum'
          readOnly: true
        current_age_days:
          type: integer
          description: Return the current age in days for documentation/schema purposes.
          readOnly: true
        survival_rate:
          type: number
          description: Return survival rate as a percentage (0-100).
          readOnly: true
        created_by:
          type: integer
          readOnly: true
          nullable: true
    ShedDetail:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        farm_name:
          type: string
        galponero:
          type: string
        occupancy:
          $ref: '#/components/schemas/ShedOccupancy'
        flocks:
          $ref: '#/components/schemas/ShedFlocksSummary'
        last_activity:
          type: object
          additionalProperties:
            type: string
            nullable: true
        status_indicator:
          type: object
          additionalProperties:
            type: string
      required:
      - farm_name
      - flocks
      - galponero
      - id
      - name
      - occupancy
      - status_indicator
    ShedFlocksSummary:
      type: object
      properties:
        active_count:
          type: integer
        avg_age:
          type: number
          format: double
        total_birds:
          type: integer
      required:
      - active_count
      - avg_age
      - total_birds
    ShedOccupancy:
      type: object
      properties:
        current:
          type: integer
        capacity:
          type: integer
        percentage:
          type: number
          format: double
      required:
      - capacity
      - current
      - percentage
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    UserRegistration:
      type: object
      properties:
        username:
          type: string
          title: Nombre de usuario
          description: 'Requerido. 150 carácteres como máximo. Únicamente letras,
            dígitos y @/./+/-/_ '
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Dirección de correo electrónico
          maxLength: 254
        password:
          type: string
          writeOnly: true
          title: Contraseña
          maxLength: 128
        password_confirm:
          type: string
          writeOnly: true
        identification:
          type: string
          maxLength: 20
        phone:
          type: string
          maxLength: 15
      required:
      - identification
      - password
      - password_confirm
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
