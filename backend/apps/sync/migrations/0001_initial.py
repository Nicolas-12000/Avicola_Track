# Generated by ChatGPT - initial migration for SyncConflict
from django.db import migrations, models
import django.db.models.deletion

class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('farms', '0001_initial'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SyncConflict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conflict_type', models.CharField(choices=[('DUPLICATE', 'Registro Duplicado'), ('TIMESTAMP_DIFF', 'Diferencia de Tiempo'), ('DATA_MISMATCH', 'Datos Inconsistentes'), ('PERMISSION', 'Conflicto de Permisos'), ('VALIDATION', 'Error de Validaci√≥n')], max_length=20)),
                ('record_type', models.CharField(max_length=50)),
                ('server_data', models.JSONField()),
                ('client_data', models.JSONField()),
                ('device_info', models.JSONField()),
                ('resolution_status', models.CharField(choices=[('PENDING', 'Pendiente'), ('RESOLVED_SERVER', 'Resuelto - Mantener Servidor'), ('RESOLVED_CLIENT', 'Resuelto - Usar Cliente'), ('RESOLVED_MANUAL', 'Resuelto - Datos Manuales'), ('IGNORED', 'Ignorado')], default='PENDING', max_length=20)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_data', models.JSONField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('priority', models.CharField(choices=[('LOW', 'Baja'), ('MEDIUM', 'Media'), ('HIGH', 'Alta')], default='MEDIUM', max_length=10)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_conflicts', to='farms.farm')),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_sync_conflicts', to='users.user')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_sync_conflicts', to='users.user')),
            ],
        ),
    ]
